<div class="modal" tabindex="-1" role="dialog" id="test-pattern">
  <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <div class="container-fluid">
          <div class="row">
            <div class="col-md-3">
              <div><label for="">Select battle</label></div>
              <select id="battle-selector" v-on:change="on_battle_changed">
                <option value="">&lt;None&gt;</option>
                <% current_user.saved_battles.joins(:battle).limit(30).order(id: :desc).each do |saved_battle| %>
                  <option value="<%= saved_battle.battle.id%>"><%= saved_battle.battle.name%></option>
                <% end %>
              </select>
            </div>
            <div class="col-md-3">
              <div><label for="snek-selector">Select snake</label></div>
              <select id="snek-selector" v-on:change="on_snek_changed">
                <option value="">&lt;None&gt;</option>
              </select>
            </div>
            <div class="col-md-5">
              <div><label for="round-selector">Round #</label>{{ round_id }}</div>
              <div class="btn-toolbar" role="toolbar">
                <div class="btn-group mr-2" role="group">
                  <button id="control-first" type="button" class="btn btn-outline-secondary" v-on:click="gotoBeginning" v-bind:disabled="round_id === null">⏮</button>
                  <button id="control-prev" type="button" class="btn btn-outline-secondary" v-on:click="prevRound" v-bind:disabled="round_id === null">⏪</button>
                  <button id="control-next" type="button" class="btn btn-outline-secondary" v-on:click="nextRound" v-bind:disabled="round_id === null">⏩</button>
                  <button id="control-last" type="button" class="btn btn-outline-secondary" v-on:click="gotoEnd" v-bind:disabled="round_id === null">⏭</button>
                </div>
                <div class="input-group">
                  <input type="range" min="0" max="100" class="slider form-control" id="round-selector" v-model="round_id" v-bind:disabled="round_id === null">
                </div>
              </div>
            </div>
            <div class="col-md-1">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
          <div class="row">
            <div class="col-md-4">
              <div id="test-pattern-container"></div>
              <div class="btn-group mt-2 mb-2 d-flex">
                <button id="control-prev" type="button" class="btn btn-sm btn-outline-secondary" v-on:click="prevPattern">⏪</button>
                <button class="btn btn-sm btn-primary w-100" v-on:click="checkPattern" v-bind:disabled="snek_id === null" v-bind:class="{ 'btn-primary': (snek_id !== null) }" >Test</button>
                <button class="btn btn-sm btn-primary w-100" v-on:click="findPattern" v-bind:disabled="snek_id === null" v-bind:class="{ 'btn-primary': (snek_id !== null) }" >Find</button>
                <button id="control-next" type="button" class="btn btn-sm btn-outline-secondary" v-on:click="nextPattern">⏩</button>
              </div>
              <div id="test-output"></div>
            </div>
            <div class="col-md-8">
              <div>
                <table class="arena-container" id="test-arena"></table>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <p>Select a battle. Then scroll the round selector to the specific situation. Then select a snek to test its movement according to your pattern. Then click "Test pattern" button.</p>
      </div>
    </div>
  </div>
</div>


<script>
if (typeof(window.testPattern) === 'function') {
  window.testPattern();
}

// On window resize
$(document).ready(resizeArena);
$(window).resize(resizeArena);

// Resize patterns cells
function resizeArena() {
    var cells = $('#test-arena tr:first td').length || 1;
    var cell_width = parseInt($('#test-arena').width() / cells);
    $('#test-arena td').width(cell_width);
    $('#test-arena td').height(cell_width);
}
</script>

